"""
Visualisation: Driver attention based on aggressiveness.
"""
from scipy.stats import beta, gamma, norm
x = np.linspace(0, 1, 100)
p = beta.pdf(x, 2, 10)
plt.plot(x*35, p, color='green')
p = beta.pdf(x,  12, 12)
plt.plot(x*35, p, color='orange')
p = beta.pdf(x, 10, 2)
plt.plot(x*35, p, color='red')
mean, var, skew, kurt = beta.stats(2, 10, moments='mvsk')
mean
driver_types = ['Timid', 'Normal', 'Aggressive']
plt.legend(driver_types)
plt.xlabel('Lateral displacement (%)')
plt.ylabel('Attention pdf')


############################################################
############################################################
############################################################
"""
Visualisation: Different sigmoids

"""
x = np.linspace(-5, 5, 1000)

for i in [0.5, 1, 2, 5]:
    y = 1/(1+np.exp(-i*x))
    plt.plot(x, y)
plt.grid()

plt.figure()
x = np.linspace(-5, 5, 1000)
minval = 19
maxval = 30
for i in [0.5, 1, 5]:
    y =  minval + (maxval-minval)/(1+np.exp(-i*(x)))
    plt.plot(x, y)
plt.plot(x, x + 25)
plt.grid()
############################################################
############################################################
############################################################
"""
Visualisation: Desired speed distributions

"""
x = np.linspace(15, 35, 1000)

p = norm.pdf(x, 19, 1)
plt.plot(x, p, color='green')
p = norm.pdf(x,  25, 1)
plt.plot(x, p, color='orange')
p = norm.pdf(x, 30, 1)
plt.plot(x, p, color='red')
driver_types = ['Timid', 'Normal', 'Aggressive']
plt.legend(driver_types)
plt.xlabel('Desired speed ($ms^{-1}$)')
plt.ylabel('Desired speed pdf')

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
"""
"""

############################################################
############################################################
############################################################
